To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml


Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 172.30.196.172:6443 --token 0ekkur.vywvx18f6ap3jgl0 \
        --discovery-token-ca-cert-hash sha256:7cc2379294f434775cf312343e1e93dc8d5e4f6973b2234ae46139f8cc152ac1

--cri-socket unix:///var/run/cri-dockerd.sock
# Use this command for both initial installation, and subsequent config changes
helm upgrade --install juicefs-csi-driver juicefs/juicefs-csi-driver -n kube-system -f ./values.yaml



juicefs format --storage s3 \
    --bucket https://internbucketjuicefs.s3.us-east-1.amazonaws.com \
    --access-key <> \
    --secret-key <> \
    redis://127.0.0.1:6379/0 \
    juicefsfors3


root@vivekyadav-vesu:~# juicefs format --storage s3 \
    --bucket https://internbucketjuicefs.s3.us-east-1.amazonaws.com \
    --access-key <> \
    --secret-key <> \
    redis://127.0.0.1:6379/0 \
    juicefsfors3
2024/11/08 13:33:45.582455 juicefs[135529] <INFO>: Meta address: redis://127.0.0.1:6379/0 [interface.go:504]
2024/11/08 13:33:45.585836 juicefs[135529] <WARNING>: AOF is not enabled, you may lose data if Redis is not shutdown properly. [info.go:84]
2024/11/08 13:33:45.586509 juicefs[135529] <INFO>: Ping redis latency: 434.308µs [redis.go:3515]
2024/11/08 13:33:45.588236 juicefs[135529] <INFO>: Data use s3://internbucketjuicefs/juicefsfors3/ [format.go:484]
2024/11/08 13:33:47.751478 juicefs[135529] <INFO>: Volume is formatted as {
  "Name": "juicefsfors3",
  "UUID": "07c172f1-8e95-4f46-b83c-19879fe801e1",
  "Storage": "s3",
  "Bucket": "https://internbucketjuicefs.s3.us-east-1.amazonaws.com",
  "AccessKey": "<>",
  "SecretKey": "removed",
  "BlockSize": 4096,
  "Compression": "none",
  "EncryptAlgo": "aes256gcm-rsa",
  "KeyEncrypted": true,
  "TrashDays": 1,
  "MetaVersion": 1,
  "MinClientVersion": "1.1.0-A",
  "DirStats": true,
  "EnableACL": false
} [format.go:521]


kubectl taint nodes  vivekyadav-vesu node-role.kubernetes.io/control-plane-
kubectl taint nodes  mildevkub040 node-role.kubernetes.io/master-

# Use this command for both initial installation, and subsequent config changes
helm upgrade --install juicefs-csi-driver juicefs/juicefs-csi-driver -n kube-system -f ./values.yaml
root@vivekyadav-vesu:~/juicefs-csi-driver# helm upgrade --install juicefs-csi-driver juicefs/juicefs-csi-driver -n kube-system -f ./values.yaml
root@vivekyadav-vesu:~/juicefs-csi-driver# helm upgrade --install juicefs-csi-driver juicefs/juicefs-csi-driver -n kube-system -f ./values.yaml
Release "juicefs-csi-driver" does not exist. Installing it now.
NAME: juicefs-csi-driver
LAST DEPLOYED: Sat Nov  9 23:20:17 2024
NAMESPACE: kube-system
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Guide on how to configure a StorageClass or PV and start using the driver are here:
https://juicefs.com/docs/csi/guide/pv

Before start, you need to configure file system credentials in Secret:

- If you are using JuiceFS enterprise, you should create a file system in JuiceFS console, refer to this guide: https://juicefs.com/docs/cloud/getting_started/#create-file-system

- If you are using JuiceFS community, you should prepare a metadata engine and object storage:
  1. For metadata server, you can refer to this guide: https://juicefs.com/docs/community/databases_for_metadata
  2. For object storage, you can refer to this guide: https://juicefs.com/docs/community/how_to_setup_object_storage

Then you can use this file to test:

```
apiVersion: v1
kind: Secret
metadata:
  name: juicefs-secret
  namespace: default
type: Opaque
stringData:
  name: juicefs-vol              # The JuiceFS file system name
  access-key: <ACCESS_KEY>       # Object storage credentials
  secret-key: <SECRET_KEY>       # Object storage credentials
  # follows are for JuiceFS enterprise
  token: ${JUICEFS_TOKEN}        # Token used to authenticate against JuiceFS Volume
  # follows are for JuiceFS community
  metaurl: <META_URL>            # Connection URL for metadata engine.
  storage: s3                    # Object storage type, such as s3, gs, oss.
  bucket: <BUCKET>               # Bucket URL of object storage.
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: juicefs-sc
provisioner: csi.juicefs.com
parameters:
  csi.storage.k8s.io/provisioner-secret-name: juicefs-secret
  csi.storage.k8s.io/provisioner-secret-namespace: default
  csi.storage.k8s.io/node-publish-secret-name: juicefs-secret
  csi.storage.k8s.io/node-publish-secret-namespace: default
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: juicefs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Pi
  storageClassName: juicefs-sc
---
apiVersion: v1
kind: Pod
metadata:
  name: juicefs-app
  namespace: default
spec:
  containers:
  - args:
    - -c
    - while true; do echo $(date -u) >> /data/out.txt; sleep 5; done
    command:
    - /bin/sh
    image: busybox
    name: app
    volumeMounts:
    - mountPath: /data
      name: juicefs-pv
  volumes:
  - name: juicefs-pv
    persistentVolumeClaim:
      claimName: juicefs-pvc
```

root@vivekyadav-vesu:~/juicefs-csi-driver# mount --bind /var/lib/juicefs/volume /var/lib/juicefs/volume
mount --make-shared /var/lib/juicefs/volume
root@vivekyadav-vesu:~/juicefs-csi-driver# sudo mount --make-shared /var/lib/juicefs/volume

sudo mount --make-shared /

kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
kubectl delete pod juicefs-csi-controller-0 -n kube-system

kubectl exec -it juicefs-pod -- /bin/bash


kubectl patch pvc juicefs-pvc -p '{"metadata":{"finalizers":null}}'
kubectl patch pv juicefs-pv -p '{"metadata":{"finalizers":null}}'

juicefs mount -d "redis://redis:6379/0" /mnt/jfs
root@vivekyadav-vesu:~# juicefs mount -d "redis://127.0.0.1:6379/0" /mnt/jfs
2024/11/09 23:00:58.951210 juicefs[574665] <INFO>: Meta address: redis://127.0.0.1:6379/0 [interface.go:504]
2024/11/09 23:00:58.965099 juicefs[574665] <WARNING>: AOF is not enabled, you may lose data if Redis is not shutdown properly. [info.go:84]
2024/11/09 23:00:58.965885 juicefs[574665] <INFO>: Ping redis latency: 509.899µs [redis.go:3515]
2024/11/09 23:00:58.978104 juicefs[574665] <INFO>: Data use s3://internbucketjuicefs/juicefsfors3/ [mount.go:629]
2024/11/09 23:00:59.482671 juicefs[574665] <INFO>: OK, juicefsfors3 is ready at /mnt/jfs [mount_unix.go:200]

